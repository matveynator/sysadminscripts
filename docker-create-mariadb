#!/bin/bash
LANG=C
cmdname=`basename $0`
newtmpdir=`mktemp -d /tmp/${cmdname}.XXXXXX`

function cleanup () {
        rm -rf "${newtmpdir}"
}

docker_bin=`which docker`;

if [ "$docker_bin" == "" ] 
then
	 echo "Docker not installed. Proceed with install? (CTRL+C to Abort)"
	 echo "or run install manually: apt-get -y install docker-ce"
	 read
	 apt-get -y install docker-ce
fi

function usage() {
cat <<EOF

Usage: ${cmdname}

Interactive script to download and setup mariadb-server in docker.
Will ask for mariadb PORT and VERSION, and will create new service
with automatic startup across reboots.

-h --help  : Help (this screen).
EOF
}

trap 'cleanup' EXIT
trap 'cleanup' SIGTERM

case "$1" in

-h|--help)
usage
exit
;;
esac

echo "Please enter database PORT (eg 3306), CTRL+C to abort: "
read docker_port
[ "${docker_port}" == "" ] && echo "Error: Empty port!" && exit 1

if lsof -i:${docker_port} |grep -q LISTEN
then
   echo "ERROR: Port ${docker_port} allready in use!"
   lsof -i:${docker_port} |grep LISTEN
   exit 1
fi

echo "Please enter database VERSION (eg 10.1.41), CTRL+C to abort: "
read docker_mariadbversion
[ "${docker_mariadbversion}" == "" ] && echo "Error: Empty VERSION!" && exit 1

docker_superuser=root
docker_servicename="mariadb-${docker_port}"
docker_pass=`pwgen 20 1`

data_path="/var/lib/${docker_servicename}/data"
mkdir -p ${data_path}
echo "created: ${data_path}"

confd_path="/var/lib/${docker_servicename}/conf.d"
mkdir -p ${confd_path}
echo "created: ${confd_path}"

binlog_path="/backup/${docker_servicename}/binlogs"
mkdir -p ${binlog_path}
chmod -R 777 ${binlog_path}
echo "created: ${binlog_path}"

cat > ${confd_path}/options.cnf <<EOF
[mysql]
max_allowed_packet      = 512M

[mysqld]
#skip-grant-tables
server-id               = 1
log_bin                 = /var/log/mysql/mysql-bin.log
expire_logs_days        = 10
max_allowed_packet      = 512M
innodb_buffer_pool_size = 16000M
innodb_log_buffer_size  = 300M
innodb_flush_log_at_trx_commit = 1
innodb_flush_method     = O_DIRECT
innodb_file_per_table   = 1
slave-skip-errors       = 1062

[mysqldump]
max_allowed_packet      = 512M
EOF

docker run --restart unless-stopped -d --name ${docker_servicename} -e MYSQL_ROOT_PASSWORD=${docker_pass} -e MYSQL_USER=${docker_superuser} -e MYSQL_PASSWORD=${docker_pass} -v "/etc/timezone:/etc/timezone:ro" -v "/etc/localtime:/etc/localtime:ro" -v ${binlog_path}:/var/log/mysql -v ${confd_path}:/etc/mysql/conf.d -v ${data_path}:/var/lib/mysql -p ${docker_port}:3306 mariadb:${docker_mariadbversion}

cat >>  ~/.my.cnf <<EOF
[client]
host     = 127.0.0.1
port     = ${docker_port}
user     = ${docker_superuser}
password = ${docker_pass} 
EOF

chmod 400 ~/.my.cnf


cat <<EOF

OK - new MariaDB server version ${docker_mysqlversion} created:

host     = 127.0.0.1
port     = ${docker_port}
user     = ${docker_superuser}
password = ${docker_pass} 
config   = ${confd_path}/options.cnf
binlogs  = ${binlog_path}
data     = ${data_path}
EOF
